"""



type BDates {
    creation: String
    modification: String
    _public: String
    benchmark_start: String
    benchmark_stop: String
}

type Challenge{
    _id: String
    _schema: String
    orig_id: String
    name: String
    is_automated: Boolean
    dates: CDates
    url: String
    benchmarking_event_id: String
    challenge_contact_ids: [String]
    references: [String]
    datasets: [Dataset]
}

type CDates {
    creation: String
    modification: String
    _public: String
    challenge_start: String
    challenge_stop: String
}

type BenchmarkingEvent {
    _id: String
    _schema: String
    orig_id: String
    name: String
    is_automated: Boolean
    dates: BDates
    url: String
    community_id: String
    bench_contact_ids: [String]
    references: [String]
    challenges: [Challenge]
}





type ToolAccess{
    tool_access_type: String
    link: String
    techdocs: [Link]
}

type Tool {
    _id: String
    _schema: String
    registry_tool_id: String
    name: String
    description: String
    is_automated: Boolean
    tool_contact_ids: [String]
    status: String
    activation: String
    deactivation: String
    references: [String]
    tool_access: [ToolAccess]
}

type Dates{
    creation: String
    modification: String
    _public: String
}

type Datalink{
    attrs: [String]
    validation_date: String
    status: String
    uri: [String]
}

type RelDatasetId {
    dataset_id: String
    role: String
}

type DependsOn {
    metrics_id: String
    tool_id: String
    rel_dataset_ids: [RelDatasetId]
}

type Dataset{
    _id: String
    _schema: String
    orig_id: String
    community_id: String
    challenge_ids: [String]
    visibility: String
    name: String
    version: String
    description: String
    dates: Dates
    type: String
    datalink: Datalink
    dataset_contact_ids: [String]
    depends_on: DependsOn
    references: [String]
}

input ToolFilters {
    id: String
    community_id: String
}

input DatasetFilters {
    visibility: String
    community_id : String
}


input BenchmarkingEventFilters {
    id: String
    community_id : String
}

input ChallengeFilters {
    id: String
    benchmarking_event_id: String
}
"""
input CommunityFilters {
    id: String
    keywords: [String]
    status: String
    
}

type Link {
    label: String
    uri: String
}

type Community {
    _id: String
    _schema: String
    description: String
    acronym: String
    status: String
    keywords: [String]
    name: String
    community_contact_ids: [String]
    links: [Link]
}

type Query{

    
    #getTools(toolFilters: ToolFilters) : [Tool]

    getCommunities(communityFilters: CommunityFilters) : [Community]

    #getBenchmarkingEvents(benchmarkingEventFilters: BenchmarkingEventFilters) : [BenchmarkingEvent]

    #getChallenges(challengeFilters: ChallengeFilters): [Challenge]

    #getDatasets(datasetFilters: DatasetFilters): [Dataset]
}
